{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "managedInstanceName": {
            "defaultValue": "mi",
            "type": "string",
            "metadata": {
              "description": "Enter managed instance name."
            }
        },
        "skuName": {
            "type": "string",
            "defaultValue": "GP_Gen5",
            "allowedValues": [
              "GP_Gen5",
              "BC_Gen5"
            ],
            "metadata": {
              "description": "Enter sku name."
            }
        },
        "vCores": {
            "type": "int",
            "defaultValue": 16,
            "allowedValues": [
              8,
              16,
              24,
              32,
              40,
              64,
              80
            ],
            "metadata": {
              "description": "Enter number of vCores."
            }
        },
        "storageSizeInGB": {
            "type": "int",
            "defaultValue": 256,
            "maxValue": 8192,
            "minValue": 32,
            "metadata": {
              "description": "Enter storage size."
            }
        },
        "licenseType": {
            "type": "string",
            "defaultValue": "LicenseIncluded",
            "allowedValues": [
              "BasePrice",
              "LicenseIncluded"
            ],
            "metadata": {
              "description": "Enter license type."
            }
        },
        "subnetName": {
            "type": "string",
            "defaultValue": "ManagedInstance",
            "metadata": {
              "description": "Enter subnet name."
            }
        },
        "location": {
            "defaultValue": "[resourceGroup().location]",
            "type": "string",
            "metadata": {
                "description": "Location where the resources will be deployed."
            }
        },
        "resourcegroupname": {
            "defaultValue": "[resourceGroup().Name]",
            "type": "string",
            "metadata": {
                "description": "Name of resource group"
            }
        },
        "uniqueSuffix": {
            "type": "string",
            "defaultValue": "[substring(uniqueString(resourceGroup().id), 0, 6)]",
            "metadata": {
              "description": "Unique Suffix"
            }
        },
        "firstuniquestring": {
            "type": "string",
            "defaultValue": "[format('firstunique{0}', parameters('uniqueSuffix'))]",
            "metadata": {
              "description": "firstuniquestring"
            }
        },
        "seconduniquestring": {
            "type": "string",
            "defaultValue": "[format('secondunique{0}', parameters('uniqueSuffix'))]",
            "metadata": {
              "description": "seconduniquestring"
            }
        },
        "identityName": {
            "defaultValue": "PostDeploymentScriptuserAssignedName",
            "type": "string",
            "metadata": {
                "description": "Name of identity"
            }
        },
        "createPublicIP": {
            "defaultValue": true,
            "type": "bool",
            "metadata": {
                "description": "Do you want to create a public IP address for the source server?"
            }
        },
        "sourceWindowsAdminUserName": {
            "defaultValue": "sqladmin",
            "type": "string",
            "metadata": {
                "description": "Windows Authentication user name for the source server"
            }
        },
        "sourceWindowsAdminPassword": {
            "defaultValue": "Password@123",
            "type": "securestring",
            "metadata": {
                "description": "Windows Authentication password for the source server"
            }
        },
        "sourceSqlAuthenticationPassword": {
            "defaultValue": "Password@123",
            "type": "securestring",
            "metadata": {
                "description": "Sql Authentication password for the source server (User name will be same as Windows Auth)"
            }
        },
        "vmSize": {
            "type": "string",
            "metadata": {
                "description": "Source VM size"
            },
            "defaultValue": "Standard_D8s_v3"
        },
        "fileuploaduri": {
            "type": "string",
            "metadata": {
                "description": "The URI of script file to upload blob container"
            },
            "defaultValue": "https://raw.githubusercontent.com/CSALabsAutomation/quickstart-templates/main/azure-sqlmi-migration-service/UploadBlobFile.ps1"
        },
        "bakpakuri": {
            "type": "string",
            "metadata": {
                "description": "The URI of bakpakfile"
            },
            "defaultValue": "https://github.com/CSALabsAutomation/quickstart-templates/blob/main/azure-sqlmi-migration-service/AdventureWorksLT2019.bak"
        },
        "_artifactsLocation": {
            "type": "string",
            "metadata": {
                "description": "The base URI where artifacts required by this template are located including a trailing '/'"
            },
            "defaultValue": "[deployment().properties.templateLink.uri]"
        },
        "_artifactsLocationSasToken": {
            "type": "securestring",
            "metadata": {
                "description": "The sasToken required to access _artifactsLocation.  When the template is deployed using the accompanying scripts, a sasToken will be automatically generated. Use the defaultValue if the staging location is not secured."
            },
            "defaultValue": ""
        }
    },
    "variables": {
        "fileuploadurivariable" : "[parameters('fileuploaduri')]",
        "bootstrapRoleAssignmentId": "[guid(parameters('firstuniquestring'), parameters('seconduniquestring'))]",
        "contributorRoleDefinitionId":"B24988ac-6180-42a0-ab88-20f7382dd24c",
        "sourceServerName": "[take(concat('Source', uniqueString(resourceGroup().id)), 15)]",
        "managedInstanceName": "[take(concat('sqlmi', uniqueString(resourceGroup().id)), 15)]",
        "scriptLocation": "AddDatabaseToSqlServer.ps1",
        "scriptLocationToUploadFile": "UploadBlobFile.ps1",
        "bakFileLocation": "AdventureWorksLT2019.bak",
        "bakFileUri": "[uri(parameters('_artifactsLocation'), concat(variables('bakFileLocation'), parameters('_artifactsLocationSasToken')))]",
        "scriptFiles": [
            "[uri(parameters('_artifactsLocation'), concat(variables('scriptLocation'), parameters('_artifactsLocationSasToken')))]",
            "[variables('bakFileUri')]"
        ],
        "scriptParameters": "[concat('-userName ', parameters('sourceWindowsAdminUserName'), ' -password \"', parameters('sourceWindowsAdminPassword'))]",
        "scriptParametersToUploadFile": "[concat('-Resourcegroupname ', parameters('resourcegroupname'), ' -uri \"', parameters('bakpakuri'))]",
        "storageAccountNamePrefix": "storage",
        "storageAccountName": "[toLower(concat(variables('storageAccountNamePrefix'), uniqueString(resourceGroup().id)))]",
        "sourceNicName": "[take(concat('SourceNIC', uniqueString(resourceGroup().id)), 15)]",
        "publicIPSourceServer": "[take(concat('SourceIp', uniqueString(resourceGroup().id)), 15)]",
        "sourceServerNSG": "[take(concat('Sourcensg', uniqueString(resourceGroup().id)), 15)]",
        "adVNet": "[take(concat('Sourcevnet', uniqueString(resourceGroup().id)), 15)]",
        "defaultSubnetName": "default",
        "publicIpAddressIdSource": {
            "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPSourceServer'))]"
        },
        "adVNettarget": "[take(concat('SQLMI-VNET', uniqueString(resourceGroup().id)), 15)]",
        "networkSecurityGroupName": "[format('SQLMI-{0}-NSG', variables('managedInstanceName'))]",
        "routeTableName": "[format('SQLMI-{0}-Route-Table', variables('managedInstanceName'))]"
    },
    "resources": [
        {
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[variables('sourceServerName')]",
            "apiVersion": "2019-12-01",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', variables('sourceNicName'))]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('vmSize')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "MicrosoftSQLServer",
                        "offer": "sql2019-ws2019",
                        "sku": "Standard",
                        "version": "latest"
                    },
                    "osDisk": {
                        "osType": "Windows",
                        "createOption": "FromImage",
                        "caching": "ReadWrite",
                        "managedDisk": {
                            "storageAccountType": "Premium_LRS"
                        },
                        "diskSizeGB": 127
                    },
                    "dataDisks": [
                        {
                            "lun": 0,
                            "name": "[concat(variables('sourceServerName'),'_disk-1')]",
                            "createOption": "Empty",
                            "caching": "ReadOnly",
                            "managedDisk": {
                                "storageAccountType": "Premium_LRS"
                            },
                            "diskSizeGB": 1023
                        }
                    ]
                },
                "osProfile": {
                    "computerName": "[variables('sourceServerName')]",
                    "adminUsername": "[parameters('sourceWindowsAdminUserName')]",
                    "adminPassword": "[parameters('sourceWindowsAdminPassword')]",
                    "windowsConfiguration": {
                        "provisionVMAgent": true,
                        "enableAutomaticUpdates": true
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('sourceNicName')))]"
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true,
                        "storageUri": "[reference(variables('storageAccountName'), '2019-06-01').primaryEndpoints['blob']]"
                    }
                }
            },
            "resources": [
                {
                    "apiVersion": "2019-12-01",
                    "type": "extensions",
                    "name": "SqlIaasExtension",
                    "location": "[parameters('location')]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Compute/virtualMachines/', variables('sourceServerName'))]"
                    ],
                    "properties": {
                        "type": "SqlIaaSAgent",
                        "publisher": "Microsoft.SqlServer.Management",
                        "typeHandlerVersion": "2.0",
                        "autoUpgradeMinorVersion": "true",
                        "settings": {
                            "AutoTelemetrySettings": {
                                "Region": "[parameters('location')]"
                            },
                            "AutoPatchingSettings": {
                                "PatchCategory": "WindowsMandatoryUpdates",
                                "Enable": false,
                                "DayOfWeek": "Sunday",
                                "MaintenanceWindowStartingHour": "2",
                                "MaintenanceWindowDuration": "60"
                            },
                            "KeyVaultCredentialSettings": {
                                "Enable": false
                            },
                            "ServerConfigurationsManagementSettings": {
                                "SQLConnectivityUpdateSettings": {
                                    "ConnectivityType": "Private",
                                    "Port": "1433",
                                    "SQLAuthUpdateUserName": "[parameters('sourceWindowsAdminUserName')]",
                                    "SQLAuthUpdatePassword": "[parameters('sourceSqlAuthenticationPassword')]"
                                },
                                "SQLWorkloadTypeUpdateSettings": {
                                    "SQLWorkloadType": "OLTP"
                                },
                                "SQLStorageUpdateSettings": {
                                    "DiskCount": "1",
                                    "NumberOfColumns": "8",
                                    "StartingDeviceID": "2",
                                    "DiskConfigurationType": "NEW"
                                },
                                "AdditionalFeaturesServerConfigurations": {
                                    "IsRServicesEnabled": "false"
                                }
                            }
                        },
                        "protectedSettings": {
                            "SQLAuthUpdateUserName": "[parameters('sourceWindowsAdminUserName')]",
                            "SQLAuthUpdatePassword": "[parameters('sourceSqlAuthenticationPassword')]"
                        }
                    }
                },
                {
                    "apiVersion": "2019-12-01",
                    "type": "extensions",
                    "name": "CustomScriptExtension",
                    "location": "[parameters('location')]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Compute/virtualMachines/', variables('sourceServerName'))]",
                        "[resourceId('Microsoft.Compute/virtualMachines/extensions', variables('sourceServerName'), 'SqlIaasExtension')]"
                    ],
                    "properties": {
                        "publisher": "Microsoft.Compute",
                        "type": "CustomScriptExtension",
                        "typeHandlerVersion": "1.9",
                        "autoUpgradeMinorVersion": true,
                        "settings": {
                            "fileUris": "[variables('scriptFiles')]"
                        },
                        "protectedSettings": {
                            "commandToExecute": "[concat('powershell -ExecutionPolicy Unrestricted -File ', './', variables('scriptLocation'), ' ', variables('scriptParameters'))]"
                        }
                    }
                }
            ]
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[variables('sourceNicName')]",
            "apiVersion": "2020-05-01",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('adVNet'), variables('defaultSubnetName'))]",
                "[resourceId('Microsoft.Network/publicIpAddresses', variables('publicIPSourceServer'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('sourceServerNSG'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('adVNet'), variables('defaultSubnetName'))]"
                            },
                            "publicIPAddress": "[if(parameters('createPublicIP'), variables('publicIpAddressIdSource'), json('null'))]",
                            "primary": true,
                            "privateIPAddressVersion": "IPv4"
                        }
                    }
                ],
                "enableAcceleratedNetworking": false,
                "enableIPForwarding": false,
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('sourceServerNSG'))]"
                }
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[variables('sourceServerNSG')]",
            "apiVersion": "2020-05-01",
            "location": "[parameters('location')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "AllowSQLServerInBound",
                        "properties": {
                            "description": "Allow inbound SQL Server Traffic",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "1433",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "AllowAnyRDPInbound",
                        "properties": {
                            "description": "Allow virtual machine connection through rdp",
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "3389",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 110,
                            "direction": "Inbound"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[variables('networkSecurityGroupName')]",
            "apiVersion": "2020-05-01",
            "location": "[parameters('location')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "AllowSQLServerInBound",
                        "properties": {
                            "description": "Allow inbound SQL Server Traffic",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "1433",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "allow_redirect_inbound",
                        "properties": {
                          "description": "Allow inbound redirect traffic to Managed Instance inside the virtual network",
                          "protocol": "Tcp",
                          "sourcePortRange": "*",
                          "destinationPortRange": "11000-11999",
                          "sourceAddressPrefix": "VirtualNetwork",
                          "destinationAddressPrefix": "*",
                          "access": "Allow",
                          "priority": 1100,
                          "direction": "Inbound"
                        }
                    },
                    {
                        "name": "AllowAnyRDPInbound",
                        "properties": {
                            "description": "Allow virtual machine connection through rdp",
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "3389",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 110,
                            "direction": "Inbound"
                        }
                    }
                ]
            }
        },
        {
            "condition": "[parameters('createPublicIP')]",
            "type": "Microsoft.Network/publicIPAddresses",
            "sku": {
                "name": "Basic",
                "tier": "Regional"
            },
            "name": "[variables('publicIPSourceServer')]",
            "apiVersion": "2020-05-01",
            "location": "[parameters('location')]",
            "properties": {
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Static",
                "idleTimeoutInMinutes": 4,
                "dnsSettings": {
                    "domainNameLabel": "[toLower(variables('sourceServerName'))]"
                }
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[variables('adVNet')]",
            "apiVersion": "2020-05-01",
            "location": "[parameters('location')]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "10.2.0.0/24"
                    ]
                },
                "subnets": [
                    {
                        "name": "default",
                        "properties": {
                            "addressPrefix": "10.2.0.0/24"
                        }
                    }
                ],
                "enableDdosProtection": false,
                "enableVmProtection": false
            },
            "resources": [
                {
                    "type": "subnets",
                    "name": "[variables('defaultSubnetName')]",
                    "apiVersion": "2020-05-01",
                    "dependsOn": [
                        "[resourceId('Microsoft.Network/virtualNetworks', variables('adVNet'))]"
                    ],
                    "properties": {
                        "addressPrefix": "10.2.0.0/24"
                    }
                }
            ]
        },
        {
            "type": "Microsoft.Network/routeTables",
            "apiVersion": "2021-08-01",
            "name": "[variables('routeTableName')]",
            "location": "[parameters('location')]",
            "properties": {
              "disableBgpRoutePropagation": false
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[variables('adVNettarget')]",
            "apiVersion": "2020-05-01",
            "location": "[parameters('location')]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "10.3.0.0/24"
                    ]
                },
                "subnets": [
                    {
                        "name": "[parameters('subnetName')]",
                        "properties": {
                            "addressPrefix": "10.3.0.0/24",
                            "routeTable": {
                                "id": "[resourceId('Microsoft.Network/routeTables', variables('routeTableName'))]"
                            },
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
                              }
                        }
                    }
                ],
                "enableDdosProtection": false,
                "enableVmProtection": false
            },
                "dependsOn": [
                    "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]",
                    "[resourceId('Microsoft.Network/routeTables', variables('routeTableName'))]"
                ]
        },
        {
            "type": "Microsoft.Resources/deploymentScripts",
            "apiVersion": "2020-10-01",
            "name": "PostDeploymentScriptForBackupUpload",
            "location": "[resourceGroup().location]",
            "kind": "AzurePowerShell",
            "identity": {
                "type": "UserAssigned",
                "userAssignedIdentities": {
                    "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('identityName'))]": {}
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('identityName'))]",
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices/containers', variables('storageAccountName'), 'default', 'backup')]"
            ],
            "properties": {
                "azPowerShellVersion": "7.2.4",
                "cleanupPreference": "OnSuccess",
                "retentionInterval": "P1D",
                "timeout": "PT30M",
                "arguments": "[variables('scriptParametersToUploadFile')]",
                "primaryScriptUri": "[variables('fileuploadurivariable')]"
                
            }
        },
        {
            "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
            "apiVersion": "2018-11-30",
            "name": "[parameters('identityName')]",
            "location": "[resourceGroup().location]"
        },
        {
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "2018-09-01-preview",
            "name": "[variables('bootstrapRoleAssignmentId')]",
            "dependsOn": [
                "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('identityName'))]"
            ],
            "properties": {
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', variables('contributorRoleDefinitionId'))]",
                "principalId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('identityName')), '2018-11-30').principalId]",
                "scope": "[resourceGroup().id]",
                "principalType": "ServicePrincipal"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "kind": "StorageV2",
            "name": "[variables('storageAccountName')]",
            "apiVersion": "2019-06-01",
            "location": "[parameters('location')]",
            "properties": {
                "networkAcls": {
                    "bypass": "AzureServices",
                    "defaultAction": "Allow"
                },
                "supportsHttpsTrafficOnly": false,
                "encryption": {
                    "services": {
                        "file": {
                            "enabled": true
                        },
                        "blob": {
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices",
            "apiVersion": "2019-04-01",
            "name": "[concat(variables('storageAccountName'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
            ],
            "properties": {
                "cors": {
                    "corsRules": []
                },
                "deleteRetentionPolicy": {
                    "enabled": false
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2019-04-01",
            "name": "[concat(variables('storageAccountName'), '/default/', 'backup')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('storageAccountName'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
            ],
            "properties": {
                "publicAccess": "None"
            }
        }
    ],
    "outputs": {
        "dns": {
            "type": "string",
            "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPSourceServer'))).dnsSettings.fqdn]"
        },
        "username": {
            "type": "string",
            "value": "[parameters('sourceWindowsAdminUserName')]"
        },
        "password": {
            "type": "string",
            "value": "[parameters('sourceWindowsAdminPassword')]"
        },
        "userdataSourceServerDNS": {
            "type": "string",
            "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPSourceServer'))).dnsSettings.fqdn]"
        },
        "userdataSourceServerIPAddress": { 
            "type": "string",
            "value": "[reference(variables('publicIPSourceServer')).ipAddress]"
        }
    }
}
